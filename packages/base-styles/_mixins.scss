/**
 * Breakpoint mixins
 */

@define-mixin break-huge {
	@media (min-width: $(break-huge) ) {
		@mixin-content;
	}
}

@define-mixin break-wide {
	@media (min-width: $(break-wide) ) {
		@mixin-content;
	}
}

@define-mixin break-xlarge {
	@media (min-width: $(break-xlarge) ) {
		@mixin-content;
	}
}

@define-mixin break-large {
	@media (min-width: $(break-large) ) {
		@mixin-content;
	}
}

@define-mixin break-medium {
	@media (min-width: $(break-medium) ) {
		@mixin-content;
	}
}

@define-mixin break-small {
	@media (min-width: $(break-small) ) {
		@mixin-content;
	}
}

@define-mixin break-mobile {
	@media (min-width: $(break-mobile) ) {
		@mixin-content;
	}
}

@define-mixin break-zoomed-in {
	@media (min-width: $(break-zoomed-in) ) {
		@mixin-content;
	}
}


/**
 * Long content fade mixin
 *
 * Creates a fading overlay to signify that the content is longer
 * than the space allows.
 */

@define-mixin long-content-fade $direction: right, $size: 20%, $color: #fff, $edge: 0, $z-index: false {
	content: "";
	display: block;
	position: absolute;
	-webkit-touch-callout: none;
	-webkit-user-select: none;
	-khtml-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
	pointer-events: none;

	@if $z-index {
		z-index: $z-index;
	}

	@if $direction == "bottom" {
		background: linear-gradient(to top, rgba($color, 0), $color 90%);
		left: $edge;
		right: $edge;
		top: $edge;
		bottom: calc(100% - $size);
		width: auto;
	}

	@if $direction == "top" {
		background: linear-gradient(to bottom, rgba($color, 0), $color 90%);
		top: calc(100% - $size);
		left: $edge;
		right: $edge;
		bottom: $edge;
		width: auto;
	}

	@if $direction == "left" {
		background: linear-gradient(to left, rgba($color, 0), $color 90%);
		top: $edge;
		left: $edge;
		bottom: $edge;
		right: auto;
		width: $size;
		height: auto;
	}

	@if $direction == "right" {
		background: linear-gradient(to right, rgba($color, 0), $color 90%);
		top: $edge;
		bottom: $edge;
		right: $edge;
		left: auto;
		width: $size;
		height: auto;
	}
}

/**
 * Focus styles.
 */

@define-mixin block-toolbar-button-style__focus {
	box-shadow: inset 0 0 0 $border-width-focus var(--wp-admin-theme-color), inset 0 0 0 4px $white;

	// Windows High Contrast mode will show this outline, but not the box-shadow.
	outline: 2px solid transparent;
}

// Tabs, Inputs, Square buttons.
@define-mixin input-style__neutral {
	box-shadow: 0 0 0 transparent;
	transition: box-shadow 0.1s linear;
	border-radius: $radius-block-ui;
	border: $border-width solid $medium-gray-text;
	@mixin reduce-motion "transition";
}


@define-mixin input-style__focus {
	border-color: var(--wp-admin-theme-color);
	box-shadow: 0 0 0 ($border-width-focus - $border-width) var(--wp-admin-theme-color);

	// Windows High Contrast mode will show this outline, but not the box-shadow.
	outline: 2px solid transparent;
}


/**
 * Applies editor left position to the selector passed as argument
 */

@define-mixin editor-left $selector {
	$($selector) { /* Set left position when auto-fold is not on the body element. */
		left: 0;

		@media (min-width: $($break-medium + 1) ) {
			left: $admin-sidebar-width;
		}
	}

	.auto-fold $($selector) { /* Auto fold is when on smaller breakpoints, nav menu auto collapses. */
		@media (min-width: $($break-medium + 1) ) {
			left: $admin-sidebar-width-collapsed;
		}

		@media (min-width: $($break-large + 1) ) {
			left: $admin-sidebar-width;
		}
	}

	/* Sidebar manually collapsed. */
	.folded $($selector) {
		left: 0;

		@media (min-width: $($break-medium + 1) ) {
			left: $admin-sidebar-width-collapsed;
		}
	}

	/* Mobile menu opened. */
	@media (max-width: $($break-medium + 1) ) {
		.auto-fold .wp-responsive-open #{$selector} {
			left: $admin-sidebar-width-big;
		}
	}

	/* In small screens with responsive menu expanded there is small white space. */
	@media (max-width: $($break-small) ) {
		.auto-fold .wp-responsive-open #{$selector} {
			margin-left: -18px;
		}
	}

	body.is-fullscreen-mode $($selector) {
		left: 0 !important;
	}
}

/**
 * Styles that are reused verbatim in a few places
 */

// These are additional styles for all captions, when the theme opts in to block styles.
@define-mixin caption-style {
	margin-top: 0.5em;
	margin-bottom: 1em;
}

@define-mixin caption-style-theme {
	color: $dark-gray-500;
	font-size: $default-font-size;
	text-align: center;
}


/**
 * Allows users to opt-out of animations via OS-level preferences.
 */

@define-mixin reduce-motion $property: "" {

	@if $property == "transition" {
		@media (prefers-reduced-motion: reduce) {
			transition-duration: 0s;
		}
	}

	@else if $property == "animation" {
		@media (prefers-reduced-motion: reduce) {
			animation-duration: 1ms;
		}
	}

	@else {
		@media (prefers-reduced-motion: reduce) {
			transition-duration: 0s;
			animation-duration: 1ms;
		}
	}

}

@define-mixin input-control {
	font-family: $default-font;
	padding: 6px 8px;
	@mixin input-style__neutral;

	/* Fonts smaller than 16px causes mobile safari to zoom. */
	font-size: $mobile-text-min-font-size;
	/* Override core line-height. To be reviewed. */
	line-height: normal;
	@mixin break-small {
		font-size: $default-font-size;
		/* Override core line-height. To be reviewed. */
		line-height: normal;
	}

	&:focus {
		@mixin input-style__focus;
	}

	// Use opacity to work in various editor styles.
	&::-webkit-input-placeholder {
		color: $dark-opacity-300;
	}

	&::-moz-placeholder {
		opacity: 1; // Necessary because Firefox reduces this from 1.
		color: $dark-opacity-300;
	}

	&:-ms-input-placeholder {
		color: $dark-opacity-300;
	}

	.is-dark-theme & {
		&::-webkit-input-placeholder {
			color: $light-opacity-300;
		}

		&::-moz-placeholder {
			opacity: 1; // Necessary because Firefox reduces this from 1.
			color: $light-opacity-300;
		}

		&:-ms-input-placeholder {
			color: $light-opacity-300;
		}
	}
}

@define-mixin checkbox-control {
	@mixin input-control;
	border: $border-width + 1 solid $medium-gray-text;
	margin-right: $grid-unit-15;
	transition: none;
	border-radius: $radius-block-ui;

	&:focus {
		border-color: $medium-gray-text;
		box-shadow: 0 0 0 1px $medium-gray-text;
	}

	&:checked {
		background: var(--wp-admin-theme-color);
		border-color: var(--wp-admin-theme-color);
	}

	&:checked:focus {
		box-shadow: 0 0 0 $border-width-focus $medium-gray-text;
	}


	&:checked::before,
	&[aria-checked="mixed"]::before {
		margin: -3px -5px;
		color: $white;

		@mixin break-medium {
			margin: -4px 0 0 -5px;
		}
	}

	&[aria-checked="mixed"] {
		background: var(--wp-admin-theme-color);
		border-color: var(--wp-admin-theme-color);

		&::before {
			// Inherited from `forms.css`.
			// See: https://github.com/WordPress/wordpress-develop/tree/5.1.1/src/wp-admin/css/forms.css#L122-L132
			content: "\f460";
			float: left;
			display: inline-block;
			vertical-align: middle;
			width: 16px;
			/* stylelint-disable */
			font: normal 30px/1 dashicons;
			/* stylelint-enable */
			speak: none;
			-webkit-font-smoothing: antialiased;
			-moz-osx-font-smoothing: grayscale;

			@mixin break-medium {
				float: none;
				font-size: 21px;
			}
		}

		&:focus {
			box-shadow: 0 0 0 $border-width-focus $dark-gray-500;
		}
	}
}

@define-mixin radio-control {
	@mixin input-control;
	border: $border-width + 1 solid $medium-gray-text;
	margin-right: $grid-unit-15;
	transition: none;
	border-radius: $radius-round;

	&:checked::before {
		width: 6px;
		height: 6px;
		margin: 6px 0 0 6px;
		background-color: $white;

		@mixin break-medium {
			margin: 3px 0 0 3px;
		}
	}

	&:focus {
		border-color: $medium-gray-text;
		box-shadow: 0 0 0 1px $medium-gray-text;
	}

	&:checked {
		background: var(--wp-admin-theme-color);
		border-color: var(--wp-admin-theme-color);
	}

	&:checked:focus {
		box-shadow: 0 0 0 $border-width-focus $medium-gray-text;
	}

}

/**
 * Reset default styles for JavaScript UI based pages.
 * This is a WP-admin agnostic reset
 */
@define-mixin reset {
	box-sizing: border-box;

	*,
	*::before,
	*::after {
		box-sizing: inherit;
	}
}

/**
 * Reset the WP Admin page styles for Gutenberg-like pages.
 */
@define-mixin wp-admin-reset $content-container {
	background: $white;

	#wpcontent {
		padding-left: 0;
	}

	#wpbody-content {
		padding-bottom: 0;
	}

	/* We hide legacy notices in Gutenberg Based Pages, because they were not designed in a way that scaled well.
	   Plugins can use Gutenberg notices if they need to pass on information to the user when they are editing. */
	#wpbody-content > div:not( $(content-container) ):not(#screen-meta) {
		display: none;
	}

	#wpfooter {
		display: none;
	}

	.a11y-speak-region {
		left: -1px;
		top: -1px;
	}

	ul#adminmenu a.wp-has-current-submenu::after,
	ul#adminmenu > li.current > a.current::after {
		border-right-color: $white;
	}

	.media-frame select.attachment-filters:last-of-type {
		width: auto;
		max-width: 100%;
	}
}

@define-mixin admin-scheme $color-primary {
	--wp-admin-theme-color: $color-primary;

	// Darker shades.
	--wp-admin-theme-color-darker-10: color($color-primary shade(5%));
	--wp-admin-theme-color-darker-20: color($color-primary shade(10%));
}

@define-mixin wordpress-admin-schemes {
	body.admin-color-light {
		@mixin admin-scheme #0085ba;
	}

	body.admin-color-blue {
		@mixin admin-scheme #096484;
	}

	body.admin-color-coffee {
		@mixin admin-scheme #46403c;
	}

	body.admin-color-ectoplasm {
		@mixin admin-scheme #523f6d;
	}

	body.admin-color-midnight {
		@mixin admin-scheme #e14d43;
	}

	body.admin-color-ocean {
		@mixin admin-scheme #627c83;
	}

	body.admin-color-sunrise {
		@mixin admin-scheme #dd823b;
	}
}

// It is important to include these styles in all built stylesheets
// This allows to CSS variables post CSS plugin to generate fallbacks.
:root {
	@mixin admin-scheme #007cba;
}
